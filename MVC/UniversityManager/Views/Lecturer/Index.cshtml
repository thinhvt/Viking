
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@* Button này sẽ link đến lectureModal để show popup *@
<button type="button" id="btnCreate" class="btn btn-primary" data-toggle="modal" data-target="#lectureModal">
    Create New
</button>
<p></p>
@* Phần này là hiện datatable *@
<table id="dataTableDemo" class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th>No.</th>
            <th>Lecturer Code</th>
            <th>Lecturer Name</th>
            <th>Email</th>
            <th>Department</th>
            <th>Action</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

@* Phần này là hiện popup để tạo mới *@
<div id="lectureModal" class="modal fade">

    <div class="modal-dialog">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" id="btnClose" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Create Lecturer<label id="title"></label></h4>
            </div>

            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-10">
                            <label>LecCode</label>
                            <input type="text" id="LecCode" class="form-control" />
                            <label id="LecError" style="color:red; visibility:hidden;"> LecCode is Number, letter and 2-10 Char</label><br />
                            <label id="LecEError" style="color:red; visibility:hidden;"> LecCode is Exist</label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            <label>LecName</label>
                            <input type="text" id="LecName" class="form-control" />
                            <label id="LecNameError" style="color:red; visibility:hidden;">LecName is invalid</label><br />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-10">
                            <label>Phone</label>
                            <input type="text" id="Phone" class="form-control" />
                            <label id="PhoneError" style="color:red; visibility:hidden;"> Phone is number [7-15]</label>
                            <label id="PhoneEError" style="color:red; visibility:hidden;"> Phone is Exist</label>
                        </div>

                    </div><div class="form-group">
                        <div class="col-md-10">
                            <label>Email</label>
                            <input type="text" id="Email" class="form-control" />
                            <label id="EmailError" style="color:red; visibility:hidden;"> Email is invalid</label>
                            <label id="EmailEError" style="color:red; visibility:hidden;"> Email is Exist</label>
                        </div>
                    </div>
                    <select id="cateDepartment">
                        @* Sử dụng Razor tượng tự như Scripting element ở Java *@
                        @{
                            UniversityManagement.Service.DepartmentService deSer = new UniversityManagement.Service.DepartmentService();
                            var list = deSer.getAll();
                        }
                        @foreach (var p in list)
                        {
                            <option value="@p.ID">@p.DepName</option>
                        }
                    </select>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="btnSave" class="btn btn-primary">Save</button>
                    <button type="button" id="btnClose1" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

@* Đây là popup để confirm delete *@
<div id="confirmModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><label id="LecturerName"></label></h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    Do you want to delete this record ?
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnOk" class="btn btn-primary">Ok</button>
                <button type="button" id="btnCancel" class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<script>

    var CreateCheck = true;
    var No = 1;
    //Phần này là load dữ liệu lên datatable
    function getLecturerData() {
        var DataTable1 = $("#dataTableDemo");

        $(DataTable1).dataTable({
            //Những tham số này đọc thêm về datatable sẽ rõ hơn
            "bFilter": true,
            "bSort": true,
            "bRetrieve": true,
            "bScrollCollapse": true,
            "bProcessing": true,
            "XScroll": true,
            //dùng 2 cách gọi url đều được, nhưng action sẽ sử dụng nhiều hơn
            //param1: method name
            //param2: controller name
            //url: '/Lecturer/GetDataTable/',
            "sAjaxSource": "@Url.Action("GetDataTable", "Lecturer")",

            "aoColumnDefs": [
                {
                    // cột 0 là số thứ tự
                    "aTargets": [0],
                    "bSearchable": false,
                    "bSortable": false,
                    "mRender": function () {
                        return No++;
                    }
                },
                {
                    //tự mapping dữ liệu json theo đúng thứ tự trả về vào cột 1, 2, 3, 4
                    "aTargets": [1, 2, 3, 4],
                    "bSortable": false,
                },
                //button delete và update
                  {
                      "aTargets": [5],
                      "bSortable": false,
                      "bSearchable": false,
                      "mRender": function (data, type, row) {
                          return "<a class=\"btn btn-block btn-primary\" href=\"javascript:ManageUser('" + row[0] + "');\">Manage</a>";
                      }
                  },

                  {
                      "aTargets": [6],
                      "bSortable": false,
                      "bSearchable": false,
                      "mRender": function (data, type, row) {
                          return "<a class=\"btn btn-block btn-danger\" href=\"javascript:DeleteUser('" + row[0] + "','" + row[1] + "');\">Delete</a>";
                      }
                  }
            ],
            "bAutoWidth": false
        }).fnSetFilteringDelay(1000);
    }
    $(document).ready(function () {
        //Method này sẽ chạy mỗi lần trang view được trỏ đến hoặc refresh
        getLecturerData();
    });
    $('#btnSave').click(function () {
        ExistCode($("#LecCode").val(), $("#Email").val(),$("#Phone").val());
        if (checkExsistC == false) {
            document.getElementById('LecEError').style.visibility = "visible";
            checkExsistC = false;
        }
        else {
            document.getElementById('LecEError').style.visibility = "hidden";
            checkExsistC = true;
        }

        if (checkExsistE == false) {
            document.getElementById('PhoneEError').style.visibility = "visible";
            checkExsistE = false;
        }
        else {
            document.getElementById('PhoneEError').style.visibility = "hidden";
            checkExsistE = true;
        }
        if (checkExsistP == false) {
            document.getElementById('EmailEError').style.visibility = "visible";
            checkExsistP = false;
        }
        else {
            document.getElementById('EmailEError').style.visibility = "hidden";
            checkExsistP = true;
        }
        checkBlank();
        //Làm demo không cần validation
        if (checkValid == true && checkRong == true
            && checkExsistC == true
            && checkExsistP == true
            && checkExsistE == true) {
            if (CreateCheck == true) {
                //data này là kiểu là json
                //thường thì người ta sẽ dùng View model và linq để mapping dữ liệu
                //đẩy qua controller
                var data = {
                    LecCode: $("#LecCode").val(),
                    LecName: $("#LecName").val(),
                    Phone: $("#Phone").val(),
                    Email: $("#Email").val(),
                    DepartmentID: $('#cateDepartment option:selected').val()
                }

                //ajax sẽ gọi method ở Controller để tạo mới Lecturer
                $.ajax({
                    
                    url: '@Url.Action("Create", "Lecturer")', 
                    type: 'POST',
                    dataType: 'json',
                    data: data,
                    success: function (data) {
                        $("#lectureModal").modal('hide');
                        clear();
                        getLecturerData();
                        //Refresh lại datatable
                        $('#dataTableDemo').DataTable().ajax.reload()
                    },
                    error: function (err) {
                        alert("Error: " + err.responseText);
                    }
                })
            } else {
                var data = {
                    ID: LecturerID,
                    LecCode: $("#LecCode").val(),
                    LecName: $("#LecName").val(),
                    Phone: $("#Phone").val(),
                    Email: $("#Email").val(),
                    DepartmentID: $('#cateDepartment option:selected').val()

                }

                $.ajax({
                    url: '/Lecturer/Update/',
                    type: 'POST',
                    dataType: 'json',
                    data: data,
                    success: function (data) {
                        $("#lectureModal").modal('hide');
                        clear();
                        getLecturerData();
                        $('#dataTableDemo').DataTable().ajax.reload()

                    },
                    error: function (err) {
                        alert("Error: " + err.responseText);
                    }
                })

            }

        }
        });
    var LecturerID;
    function ManageUser(ID) {
        $.ajax({
            url: '/Lecturer/GetLecturerByID/' + ID,
            type: 'GET',
            dataType: 'json',
            //      data: data,
            success: function (data) {
                //  alert(data.ID);
                LecturerID = data.ID
                $("#LecCode").val(data.LecCode);
                $("#LecName").val(data.LecName);
                $("#Phone").val(data.Phone);
                $("#Email").val(data.Email);
                CreateCheck = false;
                $("#lectureModal").modal('show');
                $('#cateDepartment').val(data.DepartmentID).change()
            },
            error: function (err) {
                alert("Error: " + err.responseText);
            }
        });
        //    alert(ID);
    }
    var IDdel = 0;
    function DeleteUser(ID, LecturerN) {
        $("#confirmModal").modal('show');
        $("#LecturerName").text(LecturerN);
        IDdel = ID;
    }
    $("#btnOk").click(function (e) {
        $.ajax({
            //      url: "/Home/Delete/",
            url: "@Url.Action("Delete", "Lecturer")",
            data: { id: IDdel },
            type: "POST",
            dataType: 'json',
            success: function () {
                getLecturerData();
                $("#confirmModal").modal('hide');
                clear();
                $('#dataTableDemo').DataTable().ajax.reload()
            },
            error: function (e) {
                alert("Error: " + e.responseText);

            }
        });

        e.preventDefault();
    });

    $("#btnCreate").click(function (e) {
        clear();
        CreateCheck = true;
    })
    $("#btnClose").click(function () {
        clear();
        CreateCheck = true;

    });
    $("#btnClose1").click(function (e) {
        clear();
        CreateCheck = true;
    })

    function clear() {
        $("#LecCode").val("");
        $("#LecName").val("");
        $("#Phone").val("");
        $("#Email").val("");
        $("select#cateDepartment").prop('selectedIndex', 0);
        No = 1;
        CreateCheck = true;

        document.getElementById('LecError').style.visibility = "hidden";
        document.getElementById('PhoneError').style.visibility = "hidden";
        document.getElementById('EmailError').style.visibility = "hidden";
        document.getElementById('LecNameError').style.visibility = "hidden";
        document.getElementById('LecEError').style.visibility = "hidden";
        document.getElementById('EmailEError').style.visibility = "hidden";
        document.getElementById('PhoneEError').style.visibility = "hidden";
         checkValid = true;
        checkExsistC = true;
         checkExsistE = true;
        checkExsistP = true;
  

    }
    //valid
    var checkValid = true;
    var checkExsist = true;
    var checkExsistC = true;
    var checkExsistE = true;
    var checkExsistP = true;
    function ExistCode(Code, Email, Phone) {
        checkExsist = true;

        $.ajax({

            url: '/Lecturer/CheckExsist/',
            data: {
                code: Code,
                email: Email,
                phone: Phone
        },
            type: 'GET',
            dataType: 'json',
            //data: Code,
            success: function (data) {
                 checkExsistC = data.checkC;
                 checkExsistE = data.checkE;
                 checkExsistP = data.checkP;

            },
            error: function (err) {
                alert("Error: " + err.responseText);
                //checkExsistC = false;
                //checkExsistE = false;
                //checkExsistP = false;
          
            }
        })

    }

    //function CheckExsistEmail(Email) {
    //    checkExsist = true;

    //    $.ajax({

    //        url: '/Lecturer/CheckExsistEmail/',
    //        data: { mail: Email },
    //        type: 'GET',
    //        dataType: 'json',
    //        //data: Code,
    //        success: function (data) {
    //            checkExsist = data.success;

    //        },
    //        error: function (err) {
    //            alert("Error: " + err.responseText);
    //            document.getElementById('EmailEError').style.visibility = "visible";
    //            checkExsist = false;
    //        }
    //    })

    //}
    function checkBlank() {

        checkRong = true;
        if ($("#LecCode").val() == "") {
            document.getElementById('LecError').style.visibility = "visible";
            checkRong = false;
        }
        if ($("#Phone").val() == "") {
            document.getElementById('PhoneError').style.visibility = "visible";
            checkRong = false;
        }
        if ($("#LecName").val() == "") {
            document.getElementById('LecNameError').style.visibility = "visible";
            checkRong = false;
        }
        if ($("#Email").val() == "") {
            document.getElementById('EmailError').style.visibility = "visible";
            checkRong = false;
        }
        return checkRong;
    }
    $("#LecCode").blur(function () {

        var regEx = /^[a-zA-Z0-9]{2,10}$/;
        if (($("#LecCode").val()).match(regEx) == null) {
            document.getElementById('LecError').style.visibility = "visible";
            checkValid = false;

        } else {
            document.getElementById('LecError').style.visibility = "hidden";
            checkValid = true;
            checkRong = true;
        }


    })




    $("#Phone").blur(function () {

        var regEx = /^[0-9]{7,15}$/;
        if (($("#Phone").val()).match(regEx) == null) {
            document.getElementById('PhoneError').style.visibility = "visible";
            checkValid = false;
        } else {
            document.getElementById('PhoneError').style.visibility = "hidden";
            checkValid = true;
            checkRong = true;
        }

    })




    $("#LecName").blur(function () {
        var regEx = /^[a-zA-Z ]{5,250}$/;
        if (($("#LecName").val()).match(regEx) == null) {
            //      $("LecCode").val(
            document.getElementById('LecNameError').style.visibility = "visible";
            checkValid = false;
        } else {
            document.getElementById('LecNameError').style.visibility = "hidden";
            checkValid = true;
            checkRong = true;
        }

    })

    $("#Email").blur(function () {
        var regEx = /^([\w\.\-]+)@@([\w\-]+)((\.(\w){2,3})+)$/;
        if (($("#Email").val()).match(regEx) == null) {
            //      $("LecCode").val(
            document.getElementById('EmailError').style.visibility = "visible";
            checkValid = false;
        } else {
            document.getElementById('EmailError').style.visibility = "hidden";
            checkValid = true;
        }

    })

</script>


